{"version":3,"sources":["components/Online.js","components/Card.js","components/Donate.js","App.js","serviceWorker.js","index.js"],"names":["Online","_this$props","this","props","count","restProps","Object","objectWithoutProperties","react_default","a","createElement","assign","className","React","Component","dict","z","p_chely","p_mysor","total","Card","k","data","Donate","esm_extends","href","target","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","renderLoaded","bind","assertThisInitialized","d","JSON","parse","setState","console","log","components_Online","online","style","width","margin","marginTop","components_Card","components_Donate","src","frameBorder","allow","allowFullScreen","build_default","url","onMessage","handleData","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d72db1c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nclass Online extends React.Component {\r\n    render() {\r\n        const {count, ...restProps} = this.props;\r\n        return (\r\n            <div className=\"record\" {...restProps}>\r\n                <div className=\"red-dot\" />{count}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Online;","import React from 'react';\r\n\r\nconst dict = {\r\n    \"z\": \"Задержанных\",\r\n    \"p_chely\": \"Пострадавших среди митингующих\",\r\n    \"p_mysor\": \"Пострадавших среди полицейских\",\r\n    \"total\": \"Всего на улицы вышло\"\r\n}\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        const {count, k, data, ...restProps} = this.props;\r\n        return (\r\n            <div className=\"card\" {...restProps}>\r\n                <div className=\"int\">> {count}</div>\r\n                <div className=\"d\">{dict[k]}</div>\r\n                <div className=\"data\">{data}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst dict = {\r\n    \"z\": \"Задержанных\",\r\n    \"p_chely\": \"Пострадавших среди митингующих\",\r\n    \"p_mysor\": \"Пострадавших среди полицейских\",\r\n    \"total\": \"Всего вышло на улицы\"\r\n}\r\n\r\nclass Donate extends React.Component {\r\n    render() {\r\n        const {...restProps} = this.props;\r\n        return (\r\n            <div className=\"donate\" {...restProps}>\r\n                <h3>Пожертвовать <a href=\"https://tvrain.ru/donate/\" target=\"_blank\">Дождю</a></h3>\r\n                <p>-Бесплатный эфир</p>\r\n                <h3>Пожертвовать <a href=\"https://ovdinfo.org/\" target=\"_blank\">ОВД-Инфо</a></h3>\r\n                <p>-Статистика по задержаниям</p>\r\n                <p>-Правовая помощь задержанным</p>\r\n                <h3>Пожертвовать <a href=\"https://yasobe.ru/na/statsvoloshinskiiru\" target=\"_blank\">Мне</a></h3>\r\n                <p>-Всё самое важное на одной странице</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Donate;","import React from 'react';\nimport Websocket from 'react-websocket';\nimport './index.css';\nimport {Online, Card, Donate} from \"./components\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.renderLoaded = this.renderLoaded.bind(this);\n  }\n\n  handleData(data) {\n    let d = JSON.parse(data);\n    this.setState({data: d});\n  }\n\n  componentDidUpdate(){\n    console.log(this.state);\n  }\n\n  renderLoaded(){\n    return(\n        <div>\n          <Online count={this.state.data.online}/>\n          <div style={{width: \"90%\", margin: \"auto\", marginTop: '35px'}} className=\"grid\">\n            <Card k=\"z\" count={this.state.data.z} data={<p>По данным <a target=\"_blank\" href=\"https://ovdinfo.org/\">ОВД-Инфо</a></p>}/>\n            <Card k=\"p_chely\" count={this.state.data.p_chely}/>\n            <Card k=\"total\" count={this.state.data.total}/>\n          </div>\n          <div className=\"embed\">\n            <Donate />\n            <iframe className=\"yt\" width=\"100%\" src=\"https://www.youtube.com/embed/eoXCVuVeo-g\" frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen></iframe>\n          </div>\n        </div>\n    )\n  }\n\n  render() {\n    return (\n        <div>\n          <Websocket url='ws://84.201.149.111:8999'\n                     onMessage={this.handleData.bind(this)}/>\n          {this.state.data && this.renderLoaded()}\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}